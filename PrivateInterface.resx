<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnBuscar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        jPkPKpnAL4ZbxRoAAAAASUVORK5CYII=
</value>
  </data>
</root>